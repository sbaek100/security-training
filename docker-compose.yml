# 최신 Docker Compose 형식 (version 속성 제거됨)
services:
  # Elasticsearch - 데이터 저장소
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    environment:
      # 단일 노드 설정 (1대 서버용)
      - discovery.type=single-node
      # 보안 기능 비활성화 (교육용 단순화)
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
      # 메모리 설정
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms${ES_MEM} -Xmx${ES_MEM}"
    volumes:
      # 데이터 영구 저장
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      # 외부 접속 포트
      - "9200:9200"
      - "9300:9300"
    restart: unless-stopped
    # 헬스체크 (서비스 준비 상태 확인)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kibana - 시각화 도구
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: kibana
    environment:
      # Elasticsearch 연결 설정
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      # 보안 기능 비활성화
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
    ports:
      - "5601:5601"
    # Elasticsearch가 완전히 준비된 후 시작
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  # Logstash - 데이터 처리
  logstash:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}
    container_name: logstash
    environment:
      # 모니터링 비활성화 (단순화)
      - xpack.monitoring.enabled=false
      - "LS_JAVA_OPTS=-Xms${LS_MEM} -Xmx${LS_MEM}"
    volumes:
      # 설정 파일 연결
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5044:5044"  # Filebeat 연결용
      - "9600:9600"  # 모니터링 API
      - "50000:50000"  # TCP 입력
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

# 데이터 영구 저장 볼륨
volumes:
  elasticsearch_data:
